# -*- coding: utf-8 -*-
"""Modeling a traffic intersection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nBsaiNDmhpCdo4XyQj-SQx93gT-w3W-E
"""

import random
import time

class Car:
    def __init__(self, direction):
        self.direction = direction  # Dirección del auto (ejemplo: "Norte", "Sur", "Este", "Oeste")
        self.position = 0  # Representa la distancia del auto desde la intersección

    def move(self, traffic_light):
        if traffic_light.color == "green":
            self.position += 1  # El auto avanza si el semáforo está en verde

class TrafficLight:
    def __init__(self):
        self.color = "red"

    def change_color(self):
        if self.color == "red":
            self.color = "green"
        else:
            self.color = "red"

def simulate_traffic():
    traffic_light = TrafficLight()
    cars = [Car(random.choice(["Norte", "Sur", "Este", "Oeste"])) for _ in range(5)]

    for _ in range(10):  # Simular 10 ciclos
        print(f"Semáforo: {traffic_light.color.upper()}")

        for car in cars:
            car.move(traffic_light)
            print(f"Auto en {car.direction} - Posición: {car.position}")

        time.sleep(1)  # Espera de 1 segundo entre ciclos
        traffic_light.change_color()  # Cambia el color del semáforo

if __name__ == "__main__":
    simulate_traffic()